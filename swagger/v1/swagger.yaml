---
openapi: 3.0.1
info:
  title: EXPERTIZA API V1
  version: v1
paths:
  "/api/v1/courses/{id}/add_ta/{ta_id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    - name: ta_id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: add_ta course
      tags:
      - Courses
      responses:
        '201':
          description: successful
  "/api/v1/courses/{id}/tas":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: view_tas course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/{id}/remove_ta/{ta_id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: ta_id
      in: path
      description: ta_id
      required: true
      schema:
        type: string
    get:
      summary: remove_ta course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/{id}/copy":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: copy course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses":
    get:
      summary: list courses
      tags:
      - Courses
      responses:
        '200':
          description: successful
    post:
      summary: create course
      tags:
      - Courses
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                directory_path:
                  type: string
                instructor_id:
                  type: integer
                institution_id:
                  type: integer
                info:
                  type: string
              required:
              - name
              - directory_path
              - institution_id
              - instructor_id
  "/api/v1/courses/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show course
      tags:
      - Courses
      responses:
        '200':
          description: successful
    patch:
      summary: update course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                directory_path:
                  type: string
                instructor_id:
                  type: integer
                institution_id:
                  type: integer
                info:
                  type: string
              required: []
    put:
      summary: update course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                directory_path:
                  type: string
                instructor_id:
                  type: integer
                institution_id:
                  type: integer
                info:
                  type: string
              required: []
    delete:
      summary: delete course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/roles":
    get:
      summary: list roles
      tags:
      - Roles
      responses:
        '200':
          description: successful
    post:
      summary: create role
      tags:
      - Roles
      parameters: []
      responses:
        '201':
          description: Created a role
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
  "/api/v1/roles/{id}":
    parameters:
    - name: id
      in: path
      description: id of the role
      required: true
      schema:
        type: integer
    get:
      summary: show role
      tags:
      - Roles
      responses:
        '200':
          description: successful
    patch:
      summary: update role
      tags:
      - Roles
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
    put:
      summary: update role
      tags:
      - Roles
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
    delete:
      summary: delete role
      tags:
      - Roles
      responses:
        '200':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
